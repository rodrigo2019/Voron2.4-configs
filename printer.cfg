[duplicate_pin_override]
pins: PF3

[mcu]
canbus_uuid: 308a853096d3

[mcu toolhead]
canbus_uuid: ded16fd32f7c

[mcu rpi]
serial: /tmp/klipper_host_mcu

[input_shaper]
#shaper_freq_x: 49.2
#shaper_type_x: mzv
#shaper_freq_y: 34.8
#shaper_type_y: mzv

[printer]
kinematics: corexy
max_velocity: 600  
max_accel: 3500             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0


# [adxl345]
# cs_pin: rpi:None

[adxl345]
axes_map: -z,-y,x
cs_pin: toolhead:gpio1
spi_software_sclk_pin: toolhead:gpio0
spi_software_mosi_pin: toolhead:gpio3
spi_software_miso_pin: toolhead:gpio2

[resonance_tester]
accel_chip: adxl345
probe_points: 175, 175, 50  # an example
max_freq: 110

[idle_timeout]
timeout: 1800

[virtual_sdcard]
path: /home/rodrigo/printer_data/gcodes

[pause_resume]

[display_status]

[skew_correction]

[exclude_object]

[neopixel sb_leds]
pin: toolhead:gpio12          
chain_count: 3              
color_order: GRBW           
initial_RED: 0.4            
initial_GREEN: 0.8          
initial_BLUE: 1             
initial_WHITE: 0.0          


[include config/*.cfg]


[extruder]

step_pin: toolhead:gpio9
dir_pin: toolhead:gpio10
enable_pin: !toolhead:gpio7
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100

#rotation_distance: 21.7066   #CW2
rotation_distance: 46.146
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
# gear_ratio: 50:10               # BMG Gear Ratio
gear_ratio: 9:1  # Galileo 2
microsteps: 16  #16 for galileo 32 for CW2
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.800
filament_diameter: 1.75
heater_pin: toolhead:gpio6
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950  #ATC Semitec 104GT-2
sensor_pin: toolhead:gpio27
min_temp: 0
max_temp: 300
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 29.794
#pid_ki = 1.947
#pid_kd = 113.962
##  Try to keep pressure_advance below 1.0
pressure_advance: 0.03 #0.06625
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: toolhead:gpio8
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################
[verify_heater heater_bed]
check_gain_time: 120

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
##  Uncomment the following line if using the default SSR wiring from the docs site
heater_pin: PA3
##  Other wiring guides may use BED_OUT to control the SSR. Uncomment the following line for those cases
#heater_pin: PA1
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options

# sensor_type: Generic 3950 #temperature_host
# sensor_pin: PF3
# pid_kp: 27.397
# pid_ki: 0.823
# pid_kd: 228.083
# control: pid
# max_power: 0.6
# min_temp: 0
# max_temp: 155
# max_power: 0.6
# min_temp: 0
# max_temp: 155

sensor_type: Generic 3950# ATC Semitec 104GT-2
sensor_pin: PF6
secondary_sensor_name: silicone_heater
secondary_max_temp_target: 150

##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 155
control: dual_loop_pid
primary_pid_kp: 34.102
primary_pid_ki: 0.218
primary_pid_kd: 1335.098
secondary_pid_kp: 27.397
secondary_pid_ki: 0.823
secondary_pid_kd: 228.083

#####################################################################
#   Probe
#####################################################################
[output_pin _probe_enable]
pin: toolhead:gpio28
value: 0

[gcode_macro _probe_deploy]
gcode:
  SET_PIN PIN=_probe_enable VALUE=1

[gcode_macro _probe_stow]
gcode:
  SET_PIN PIN=_probe_enable VALUE=0

[probe]
pin: ^!toolhead:gpio29

x_offset: 0
y_offset: 25.0
z_offset: 0
speed: 5.0
samples: 4
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.02
samples_tolerance_retries: 3
deactivate_on_each_sample: False
activate_gcode:
  _probe_deploy
  G4 P500
deactivate_gcode:
  _probe_stow

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position:229.5,350
speed:100
z_hop:10

[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
gantry_corners:
  -60,-10
  410,420
#  Probe points
points:
  50,25
  50,275
  300,275
  300,25

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 10
retry_tolerance: 0.01
max_adjust: 10

[bed_mesh]
mesh_min: 50,25
mesh_max: 300,275
probe_count: 5,5
horizontal_move_z: 10
zero_reference_position: 237.50, 275.00

########################################
# SMART SENSOR
########################################
[filament_motion_sensor btt_sensor]
detection_length: 14.0
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin
#   Default is 7 mm.
extruder: extruder
#   The name of the extruder section this sensor is associated with.
#   This parameter must be provided.
switch_pin: PG11
#   The pin on which the switch is connected. This parameter must be
#   provided.
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
runout_gcode:
    M117 Filament out
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.


#####################################################################
#   Macros
#####################################################################
[include K-ShakeTune/*.cfg]
[include macros/*.cfg]


[gcode_macro G32]
gcode:
    G28
    QUAD_GANTRY_LEVEL
    G28

[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}
   
[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="printer",
                             state="off")}

[gcode_macro POWER_OFF_LIGHTS]
gcode:
  {action_call_remote_method("set_device_power",
                             device="lights",
                             state="off")}

[delayed_gcode delayed_printer_off]
initial_duration: 0.
gcode:
  # {% if printer.idle_timeout.state == "Idle" %}
  POWER_OFF_PRINTER
  # {% endif %}

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(500) %}
    G91
    G1 E50 F{speed}
    G1 E50 F{speed}
    G92

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(500) %}
    G91
    G1 E-50 F{speed}
    G1 E-50 F{speed}
    G92

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [skew_correction skew_profile]
#*# xy_skew = 0.0
#*# xz_skew = 0.00616529575039
#*# yz_skew = -0.00148763046378
#*#
#*# [input_shaper]
#*# shaper_type_x = zv
#*# shaper_freq_x = 52.4
#*# shaper_type_y = mzv
#*# shaper_freq_y = 35.2
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 41.213
#*# pid_ki = 13.083
#*# pid_kd = 32.455
